<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>io.siddhi.extension.io.azuredatalake</groupId>
        <artifactId>siddhi-io-azuredatalake-parent</artifactId>
        <version>1.0.2-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>bundle</packaging>
    <artifactId>siddhi-io-azuredatalake</artifactId>
    <name>Siddhi Extension - Azure Data Lake</name>

    <dependencies>
        <dependency>
            <groupId>io.siddhi</groupId>
            <artifactId>siddhi-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.siddhi</groupId>
            <artifactId>siddhi-query-api</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-storage-file-datalake</artifactId>
        </dependency>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-core-http-netty</artifactId>
        </dependency>
        <dependency>
            <groupId>org.reactivestreams</groupId>
            <artifactId>reactive-streams</artifactId>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.woodstox</groupId>
            <artifactId>stax2-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.siddhi.extension.map.xml</groupId>
            <artifactId>siddhi-map-xml</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.siddhi.extension.map.csv</groupId>
            <artifactId>siddhi-map-csv</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>documentation-deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.siddhi</groupId>
                        <artifactId>siddhi-doc-gen</artifactId>
                        <version>${siddhi.version}</version>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>deploy-mkdocs-github-pages</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
                    </suiteXmlFiles>
                    <argLine>${surefireArgLine} -ea -Xmx512m</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Bundle-Name>${project.artifactId}</Bundle-Name>
                        <Private-Package>
                            org.codehaus.stax2.*;version="${stax2.api.version}",
                            io.netty.resolver.*;version="${io.netty.version}",
                            io.netty.bootstrap.*;version="${io.netty.version}",
                            io.netty.util.*;version="${io.netty.version}",
                            io.netty.buffer.*;version="${io.netty.version}",
                            io.netty.handler.*;version="${io.netty.version}",
                            io.netty.channel.*;version="${io.netty.version}",
                            io.netty.channel.unix.*;version="${io.netty.version}",
                            io.netty.channel.kqueue.*;version="${io.netty.version}",
                            io.netty.channel.epoll.*;version="${io.netty.version}",
                            com.fasterxml.jackson.datatype.jsr310.*;version="${com.fasterxml.jackson.version}",
                            com.fasterxml.jackson.dataformat.xml.*;version="${com.fasterxml.jackson.version}",
                            com.fasterxml.jackson.module.jaxb.*;version="${com.fasterxml.jackson.version}",
                            com.fasterxml.jackson.databind.*;version="${jackson.databind.version}",
                            com.fasterxml.jackson.core.*;version="${jackson.databind.version}",
                            com.fasterxml.jackson.annotation.*;version="${jackson.databind.version}",
                            reactor.core.*;version="${reactor.core.version}",
                            reactor.util.*;version="${reactor.core.version}",
                            reactor.adapter.*;version="${reactor.core.version}",
                            reactor.netty.*;version="${reactor.netty.version}",
                            io.siddhi.extension.io.azurestorage.util.*,
                            com.azure.core.http.netty.implementation.*;version="${azure.core.http.netty.version}",
                            com.azure.core.http.*;version="${azure.core.version}",
                            com.azure.core.annotation.*;version="${azure.core.version}",
                            com.azure.core.credential.*;version="${azure.core.version}",
                            com.azure.core.cryptography.*;version="${azure.core.version}",
                            com.azure.core.exception.*;version="${azure.core.version}",
                            com.azure.core.implementation.*;version="${azure.core.version}",
                            com.azure.core.util.*;version="${azure.core.version}",
                            com.azure.storage.common.*;version="${azure.storage.common.version}",
                            com.azure.storage.file.datalake.*;version="${azure.storage.file.datalake.version}",
                            com.azure.storage.blob.*;version="${azure.storage.file.datalake.version}",
                            com.azure.core.exception.*;version="${azure.storage.file.datalake.version}",
                            org.reactivestreams.*;version="${reactive.streams.version}",
                        </Private-Package>
                        <Export-Package>
                            io.siddhi.extension.io.azurestorage.*,
                            io.netty.channel.kqueue.*,
                        </Export-Package>
                        <Import-Package>
                            io.siddhi.core.*;version="${siddhi.version.range}",
                            io.siddhi.annotation.*;version="${siddhi.version.range}",
                            io.siddhi.query.compiler.*;version="${siddhi.version.range}",
                            io.siddhi.query.api.*;version="${siddhi.version.range}",
                            org.apache.commons.logging.*,
                            org.slf4j.*
                        </Import-Package>
                        <Include-Resource>
                            META-INF=target/classes/META-INF,
                            {maven-resources}
                        </Include-Resource>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${basedir}/target/coverage-reports/jacoco.exec</destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${basedir}/target/coverage-reports/jacoco.exec</dataFile>
                            <outputDirectory>${basedir}/target/coverage-reports/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.siddhi</groupId>
                <artifactId>siddhi-doc-gen</artifactId>
                <version>${siddhi.version}</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate-md-docs</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
